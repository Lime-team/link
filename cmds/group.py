import asyncio

from aiogram import F, Router, types

from filters.chat_type import ChatTypeFilter
from filters.cmd import MessageFilter, Args2MessageFilter

from db import db

from random import randint


router = Router()
router.message.filter(
    F.text,
    ChatTypeFilter(chat_type=['group', 'supergroup'])
)


@router.message(MessageFilter(['–ø–æ–º–æ—â—å', '–ü–æ–º–æ—â—å', '–ø–æ–º–æ—â', '–ü–æ–º–æ—â', '—Ö–µ–ª–ø', '–•–µ–ª–ø', '!help', '/help']))
async def cmd_help(message: types.Message):
    await message.answer("üßê –ü–æ–º–æ—â—å \n–¢—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å –≤ —á–∞—Ç @liinkyyhelp, –µ—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å "
                         "–≤–æ–ø—Ä–æ—Å \n–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –Ω–∞—Ö–æ–¥—è—Ç—Å—è –Ω–∞ <a href='https://docs.linkbot.run.place'>"
                         "—Å–∞–π—Ç–µ</a>", parse_mode="html")


@router.message(MessageFilter(['/random', '!rand', '—Ä–∞–Ω–¥–æ–º', '—Ä–∞–Ω–¥', '–†–∞–Ω–¥–æ–º', '–†–∞–Ω–¥']))
async def cmd_rand(message: types.Message):
    try:
        start = int(message.text.split()[1])
        end = int(message.text.split()[2])
        if start > end:
            await message.reply("–û—à–∏–±–∫–∞! –ù–∞—á–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ!")
            return
    except IndexError:
        await message.reply("–û—à–∏–±–∫–∞! –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤! \n–ü—Ä–∏–º–µ—Ä: !rand 1 100")
        return
    await message.reply(f"–í–∞—à–µ —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ... üò≤\n{randint(start, end)}!")


@router.message(Args2MessageFilter(['–∫—Ç–æ —è', '—Ö—Ç–æ —è', '–∫—Ç–æ—è', '—Ö—Ç–æ—è', '!about_me', '/about_me', 'about',
                                    'who am i']))
async def cmd_about_me(message: types.Message):
    loop = asyncio.get_event_loop()
    d = await db.get('users', 'description', 'tg_id',
                                             message.from_user.id, loop)
    i = await db.get('users', 'icon', 'tg_id',
                                             message.from_user.id, loop)
    tg_id = await db.get('users', 'tg_id', 'tg_id',
                                             message.from_user.id, loop)
    id = await db.get('users', 'id', 'tg_id',
                                             message.from_user.id, loop)
    if not tg_id:
        await db.set_user('users', message.from_user.id, '–Ω–µ—Ç', '–Ω–µ—Ç', loop)
        return message.reply("–í—ã –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ –õ–∏–Ω–∫–∞! –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –µ—â—ë —Ä–∞–∑")
    return message.reply(f"–í—ã - @{message.from_user.username}. –í–∞—à id –≤ —Å–∏—Å—Ç–µ–º–µ –ª–∏–Ω–∫–∞: {id[0][0]}. "
                         f"–û–ø–∏—Å–∞–Ω–∏–µ - {d[0][0]}. –ó–Ω–∞—á–∫–∏ - {i[0][0]}")
