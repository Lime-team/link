from aiogram import F, Router, types

from filters.chat_type import ChatTypeFilter
from filters.is_admin import IsBotAdmin
from filters.cmd import MessageFilter, ArgsMessageFilter

from random import randint

from database import set_user, get_user_by_telegram_id, update_user

router = Router()
router.message.filter(
    F.text,
    ChatTypeFilter(chat_type=['group', 'supergroup', 'private'])
)


@router.message(ArgsMessageFilter(['–∫—Ç–æ —è', '—Ö—Ç–æ —è', '–∫—Ç–æ—è', '—Ö—Ç–æ—è', '!about_me', '/about_me', 'about',
                                   'who am i']))
async def cmd_about_me(message: types.Message):
    user = await set_user(tg_id=message.from_user.id)
    if user is None:
        await message.reply("üëã –í—ã –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ –õ–∏–Ω–∫–∞, —Ç–∞–∫ –∫–∞–∫ –¥–æ —ç—Ç–æ–≥–æ –Ω–µ"
                            " –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –±–æ—Ç–∞!")
    user_info = await get_user_by_telegram_id(tg_id=message.from_user.id)
    if user_info is None:
        await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω! –ù–∞–ø–∏—à–∏ –≤ —á–∞—Ç @liinkyyhelp")
        return
    await message.reply(f"üòú –í—ã - {message.from_user.first_name} {message.from_user.last_name},"
                        f" @{message.from_user.username}."
                        f"\nüßê –í–∞—à id –≤ —Å–∏—Å—Ç–µ–º–µ –ª–∏–Ω–∫–∞: {user_info['id_']}."
                        f" \nüëÄ –û–ø–∏—Å–∞–Ω–∏–µ - {user_info['description']}."
                        f" \nü¶æ –ù–∞–≥—Ä–∞–¥—ã (–º–µ–¥–∞–ª–∏) - {user_info['medals']}")


@router.message(MessageFilter(['+–æ–ø–∏—Å–∞–Ω–∏–µ', '–æ–ø–∏—Å–∞–Ω–∏–µ', '!description', '/description']),
                ChatTypeFilter(chat_type=['group', 'supergroup', 'private']))
async def cmd_update_description(message: types.Message):
    description = " ".join(message.text.split()[1:])
    await update_user(tg_id=message.from_user.id, description=description)
    await message.reply("–û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ!")


@router.message(MessageFilter(['+–º–µ–¥–∞–ª—å', '+–Ω–∞–≥—Ä–∞–¥–∞', '–Ω–∞–≥—Ä–∞–¥–∏—Ç—å', '!medal', '/medal']),
                ChatTypeFilter(chat_type=['group', 'supergroup', 'private']), IsBotAdmin())
async def cmd_update_medals(message: types.Message):
    tg_id = message.text.split()[1]
    medals = " ".join(message.text.split()[2:])
    user_info = await update_user(tg_id=tg_id, medals=medals)
    if user_info is None:
        await message.reply("–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç!")
    else:
        await message.reply("–í—Å—ë —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!")


@router.message(MessageFilter(['+–∞–π–¥–∏', '!id', '/id']), ChatTypeFilter(chat_type=['group', 'supergroup', 'private']),
                IsBotAdmin())
async def cmd_update_id(message: types.Message):
    tg_id = message.text.split()[1]
    id_ = message.text.split()[2]
    user_info = await update_user(tg_id=tg_id, id_=id_)
    if user_info is None:
        await message.reply("–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç!")
    else:
        await message.reply("–í—Å—ë —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!")


@router.message(MessageFilter(['–ø–æ–º–æ—â—å', '–ü–æ–º–æ—â—å', '–ø–æ–º–æ—â', '–ü–æ–º–æ—â', '—Ö–µ–ª–ø', '–•–µ–ª–ø', '!help', '/help']))
async def cmd_help(message: types.Message):
    await message.answer("üßê –ü–æ–º–æ—â—å \n–¢—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å –≤ —á–∞—Ç @liinkyyhelp, –µ—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å "
                         "–≤–æ–ø—Ä–æ—Å \n–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –Ω–∞—Ö–æ–¥—è—Ç—Å—è –Ω–∞ <a href='https://docs.linkbot.run.place'>"
                         "—Å–∞–π—Ç–µ</a>", parse_mode="html")


@router.message(MessageFilter(['/random', '!rand', '—Ä–∞–Ω–¥–æ–º', '—Ä–∞–Ω–¥', '–†–∞–Ω–¥–æ–º', '–†–∞–Ω–¥']))
async def cmd_rand(message: types.Message):
    try:
        start = int(message.text.split()[1])
        end = int(message.text.split()[2])
        if start > end:
            await message.reply("–û—à–∏–±–∫–∞! –ù–∞—á–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ!")
            return
    except IndexError:
        await message.reply("–û—à–∏–±–∫–∞! –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤! \n–ü—Ä–∏–º–µ—Ä: !rand 1 100")
        return
    await message.reply(f"–í–∞—à–µ —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ... üò≤\n{randint(start, end)}!")
